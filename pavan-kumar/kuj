pipeline {
    agent any
    environment {
        AWS_REGION  = 'us-west-2'
        varToPrint = "${env.GIT_BRANCH}_${env.GIT_COMMIT}"
        varPipeline = "${env.JOB_BASE_NAME}"
    }
    tools {
        maven 'maven'
        dockerTool 'docker'
      
    }
    
    stages {
        stage('Build') {
            steps {
            //def mvnHome = tool name: 'maven', type: 'maven'
                echo "Branch pipeline name $varPipeline"
                echo "GIT_COMMIT is ${env.GIT_COMMIT} ${env.GIT_REVISION} ${env.GIT_BRANCH}"
                echo "VAR is $varToPrint"
                echo "pipeline ${env.TAG_NAME} ${env.JOB_NAME} "
                sh 'cd automated-validation && mvn package'
           
            }
        }
     stage('SonarQube Analysis') {
       steps {
          withSonarQubeEnv('sonarqube-10') {
          sh 'cd automated-validation && mvn sonar:sonar'
          failOnIssues: 'false'
          }
      }
     }
    
     
      stage('Snyk scan') {
        tools {
        snyk 'Snyk'
         }
        steps {
         snykSecurity(
          severity: 'Critical',
          snykInstallation: 'Snyk',
          snykTokenId: 'snyktoken',
          targetFile: 'automated-validation/pom.xml',
          //failOnIssues: 'false'
        )		
      }
     }     
      stage('Build and Publish Image') {
           steps {
              
              sh 'cd automated-validation && mvn compile jib:build'               

             
      
            }
        }	
             
  }
}
